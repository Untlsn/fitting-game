{"id":"typescript/inverted-count.ts","dependencies":[{"name":"D:\\Programing\\Project\\JavaScript\\TypeScript\\fit-game\\tsconfig.json","includedInParent":true,"mtime":1603449437783},{"name":"D:\\Programing\\Project\\JavaScript\\TypeScript\\fit-game\\package.json","includedInParent":true,"mtime":1603450307109}],"generated":{"js":"\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InvertedCount = void 0;\n\nvar InvertedCount = /*#__PURE__*/function () {\n  function InvertedCount() {\n    _classCallCheck(this, InvertedCount);\n\n    this.count = 0;\n  }\n\n  _createClass(InvertedCount, [{\n    key: \"move\",\n    value: function () {\n      var _move = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(leverPromice) {\n        var _this = this;\n\n        var lever;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return leverPromice;\n\n              case 2:\n                lever = _context.sent;\n                return _context.abrupt(\"return\", new Promise(function (res) {\n                  if (lever) {\n                    _this.count++;\n                    res();\n                  } else _this.count--;\n                }));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function move(_x) {\n        return _move.apply(this, arguments);\n      }\n\n      return move;\n    }()\n  }]);\n\n  return InvertedCount;\n}();\n\nexports.InvertedCount = InvertedCount;"},"sourceMaps":{"js":{"mappings":[{"source":"typescript/inverted-count.ts","name":null,"original":{"line":2,"column":6},"generated":{"line":18,"column":4}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":19,"column":0}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":19,"column":27}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":20,"column":0}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":3,"column":2},"generated":{"line":22,"column":0}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":3,"column":2},"generated":{"line":22,"column":9}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":3,"column":2},"generated":{"line":22,"column":14}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":3,"column":10},"generated":{"line":22,"column":17}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":3,"column":2},"generated":{"line":22,"column":18}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":16,"column":1},"generated":{"line":23,"column":0}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":28,"column":91}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":6,"column":24},"generated":{"line":37,"column":23}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":6,"column":10},"generated":{"line":40,"column":0}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":6,"column":10},"generated":{"line":40,"column":16}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":41,"column":49}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":7,"column":15},"generated":{"line":41,"column":53}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":41,"column":60}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":7,"column":23},"generated":{"line":41,"column":61}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":7,"column":23},"generated":{"line":41,"column":71}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":7,"column":26},"generated":{"line":41,"column":74}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":7,"column":29},"generated":{"line":41,"column":76}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":42,"column":0}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":8,"column":9},"generated":{"line":42,"column":22}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":42,"column":27}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":42,"column":29}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":9,"column":8},"generated":{"line":43,"column":0}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":9,"column":8},"generated":{"line":43,"column":20}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":9,"column":12},"generated":{"line":43,"column":25}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":9,"column":13},"generated":{"line":43,"column":26}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":9,"column":8},"generated":{"line":43,"column":31}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":44,"column":0}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":44,"column":20}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":10,"column":11},"generated":{"line":44,"column":23}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":45,"column":0}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":45,"column":19}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":45,"column":25}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":13,"column":12},"generated":{"line":45,"column":30}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":13,"column":13},"generated":{"line":45,"column":31}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":45,"column":36}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":14,"column":5},"generated":{"line":46,"column":0}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":46,"column":17}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":67,"column":0}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":67,"column":7}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":67,"column":8}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":67,"column":21}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":67,"column":24}},{"source":"typescript/inverted-count.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":67,"column":37}}],"sources":{"typescript/inverted-count.ts":"export\r\nclass InvertedCount {\r\n  count = 0\r\n\r\n  async move(leverPromice: Promise<boolean>) {\r\n    const lever = await leverPromice\r\n    return new Promise(res => {\r\n      if(lever) {\r\n        this.count++\r\n        res()\r\n      }  \r\n      else\r\n        this.count--\r\n    })\r\n  }\r\n}"},"lineCount":null}},"error":null,"hash":"be536537c4a79bd3fa168ad229000503","cacheData":{"env":{}}}